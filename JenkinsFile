pipeline {
    agent any

    tools {
        jdk 'jdk17'
        maven 'maven3'
    }

    environment {
        SCANNER_HOME=tool 'sonar'
    }

    stages {
    stage('Checkout') {
      steps {
         git branch: 'main', url: 'https://github.com/its-varthini/spring-petclinic-pdonthala.git'
        sh 'echo passed'
      }
    }
     
    stage('Build') {
            steps {
                sh 'mvn clean package'
            }
    }

    stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Petclinic \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=Petclinic '''
                }
            }
     }
    
     stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "varthinidochub/spring-petclinic:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    
     stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "spring-petclinic-pdonthala"
                   
        }
        steps {
         script {
            withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
              
                   sh "git config user.email parva@gmail.com"
                    sh "git config user.name parva"
                    
                    sh "cat k8s/deployment.yml"
                    
                    NEW_IMAGE_Name = "varthinidochub/spring-petclinic:${BUILD_NUMBER}"
                    sh "sed -i 's|image: .*|image: $NEW_IMAGE_Name|' k8s/deployment.yml"

                    
                    sh "cat k8s/deployment.yml"
                     
                    sh "git add k8s/deployment.yml"
                    sh "git commit -m 'Update deployment image to version ${BUILD_NUMBER}'"
                    
                   sh "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USERNAME}/${GIT_REPO_NAME} HEAD:main"
                
            }
         }
        }
    }    
    
    }
}
